{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-01-08T15:12:13.360Z",
    "end": "2022-01-08T15:13:35.744Z",
    "duration": 82384,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e31c8d9e-8c5e-437e-b74f-91acc6f10e92",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff1f18ba-eda5-43eb-8b70-17c3a9d5ecd9",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "33558b24-b6f9-4ffd-b2c8-61c8d8e5de96",
              "parentUUID": "ff1f18ba-eda5-43eb-8b70-17c3a9d5ecd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33558b24-b6f9-4ffd-b2c8-61c8d8e5de96"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96255f01-16e2-4030-836d-d3d45ba074b3",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "9385100d-ac74-48d6-b477-04f5a5d56ed0",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0eba8ea8-6ddc-488b-9212-6d2bf3990e2c",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "948dee2f-cce7-4c91-82af-f0f263a14c9b",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "82c8c8b3-b0ae-4451-8781-c3df01653c3d",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6f1fe431-135e-4109-bb40-55e9851b7806",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "dbba4b22-8fd2-4b4e-9a6c-2c996e6c7481",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1572318e-4bac-44e0-8fc5-9ca19e982dac",
              "parentUUID": "96255f01-16e2-4030-836d-d3d45ba074b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9385100d-ac74-48d6-b477-04f5a5d56ed0",
            "0eba8ea8-6ddc-488b-9212-6d2bf3990e2c",
            "948dee2f-cce7-4c91-82af-f0f263a14c9b",
            "82c8c8b3-b0ae-4451-8781-c3df01653c3d",
            "6f1fe431-135e-4109-bb40-55e9851b7806",
            "dbba4b22-8fd2-4b4e-9a6c-2c996e6c7481",
            "1572318e-4bac-44e0-8fc5-9ca19e982dac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "324ab756-15ea-40a1-a7ac-bae51a878b5c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "7d99a6d6-60df-4283-854e-9b805c0c046a",
              "parentUUID": "324ab756-15ea-40a1-a7ac-bae51a878b5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "8aa99313-bbe1-435f-bffc-09dee5afd10a",
              "parentUUID": "324ab756-15ea-40a1-a7ac-bae51a878b5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d99a6d6-60df-4283-854e-9b805c0c046a",
            "8aa99313-bbe1-435f-bffc-09dee5afd10a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0ee65c6-01c4-49c1-bc39-5948352261c2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "e7027606-e274-4211-94da-15ae623c5b43",
              "parentUUID": "b0ee65c6-01c4-49c1-bc39-5948352261c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "8a5e98cc-9894-4b7e-9d8c-5681afa5f06f",
              "parentUUID": "b0ee65c6-01c4-49c1-bc39-5948352261c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "1d9c26a2-ba9d-4885-a72d-7ebdd9b6dc17",
              "parentUUID": "b0ee65c6-01c4-49c1-bc39-5948352261c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6f6a263d-81c3-4827-acbd-91712ed3f457",
              "parentUUID": "b0ee65c6-01c4-49c1-bc39-5948352261c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7027606-e274-4211-94da-15ae623c5b43",
            "8a5e98cc-9894-4b7e-9d8c-5681afa5f06f",
            "1d9c26a2-ba9d-4885-a72d-7ebdd9b6dc17",
            "6f6a263d-81c3-4827-acbd-91712ed3f457"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "60a3f329-8652-4562-a2c8-c2c851b149ea",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "d1d85f72-e1f0-4e91-a589-7f3e4a2b8a9d",
              "parentUUID": "60a3f329-8652-4562-a2c8-c2c851b149ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "561b0c26-c21e-46e1-8b87-4fc161d0a2b3",
              "parentUUID": "60a3f329-8652-4562-a2c8-c2c851b149ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1d85f72-e1f0-4e91-a589-7f3e4a2b8a9d",
            "561b0c26-c21e-46e1-8b87-4fc161d0a2b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c2c9d8e-8a06-4c4c-9900-d7a153197a2a",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "a9abac9c-45c0-4e5f-b8b7-27f42fd67f7b",
              "parentUUID": "3c2c9d8e-8a06-4c4c-9900-d7a153197a2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "5996c960-b024-40a7-b60e-7bc9eb071f61",
              "parentUUID": "3c2c9d8e-8a06-4c4c-9900-d7a153197a2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9abac9c-45c0-4e5f-b8b7-27f42fd67f7b",
            "5996c960-b024-40a7-b60e-7bc9eb071f61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0708e6c9-51b6-4130-95bc-e794cbda9e77",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b94c76d0-ef51-49da-ace3-3357f6bb2ffe",
              "parentUUID": "0708e6c9-51b6-4130-95bc-e794cbda9e77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e14854d9-54c0-4f99-9362-2b7eb3066ebd",
              "parentUUID": "0708e6c9-51b6-4130-95bc-e794cbda9e77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b94c76d0-ef51-49da-ace3-3357f6bb2ffe",
            "e14854d9-54c0-4f99-9362-2b7eb3066ebd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9363,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8cdbe58a-c7bd-4b2e-bd94-ae081e66e23b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "10c9ef68-29a7-468a-9bf7-54a3367d9cb0",
              "parentUUID": "8cdbe58a-c7bd-4b2e-bd94-ae081e66e23b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "26722873-22f3-4c8d-b82f-deae92698206",
              "parentUUID": "8cdbe58a-c7bd-4b2e-bd94-ae081e66e23b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9b1a2d0c-ce7c-4232-933d-8c535b38f093",
              "parentUUID": "8cdbe58a-c7bd-4b2e-bd94-ae081e66e23b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10c9ef68-29a7-468a-9bf7-54a3367d9cb0",
            "26722873-22f3-4c8d-b82f-deae92698206",
            "9b1a2d0c-ce7c-4232-933d-8c535b38f093"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12504,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8c352bc-1fef-4173-a423-c3fc9470ffb5",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8a3f52a5-56eb-4de1-9e83-294f96be5965",
              "parentUUID": "b8c352bc-1fef-4173-a423-c3fc9470ffb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "f79e9fef-6bd9-439e-8376-c5f62f59c127",
              "parentUUID": "b8c352bc-1fef-4173-a423-c3fc9470ffb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "d280e999-38f2-4314-854e-bf0e35a1750d",
              "parentUUID": "b8c352bc-1fef-4173-a423-c3fc9470ffb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2371,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a84cc9d4-cc46-4382-a268-6b5830b1ed90",
              "parentUUID": "b8c352bc-1fef-4173-a423-c3fc9470ffb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a3f52a5-56eb-4de1-9e83-294f96be5965",
            "f79e9fef-6bd9-439e-8376-c5f62f59c127",
            "d280e999-38f2-4314-854e-bf0e35a1750d",
            "a84cc9d4-cc46-4382-a268-6b5830b1ed90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22ce971c-1777-40c5-a430-41fc904c2b35",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5fead95a-6d64-41d9-8db9-88271202236e",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4352,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8b94dfeb-5c43-457a-92df-33a484ce02c0",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a697578-3548-44e5-9539-d6bc68935c69",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2c913481-4039-47f3-ae16-ee202cedad55",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "91ad4b66-6126-431b-a331-56362382cd84",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b6576b6c-1486-4e40-bf91-c520385e6224",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1e1eb9b8-85a4-444b-8d30-8ecc96cf8d85",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4352,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "64d71585-7070-4e1c-99a3-29957a1b8842",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4e58fc49-156d-4a79-9b15-94deb4c29344",
              "parentUUID": "22ce971c-1777-40c5-a430-41fc904c2b35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5fead95a-6d64-41d9-8db9-88271202236e",
            "8b94dfeb-5c43-457a-92df-33a484ce02c0",
            "7a697578-3548-44e5-9539-d6bc68935c69",
            "2c913481-4039-47f3-ae16-ee202cedad55",
            "91ad4b66-6126-431b-a331-56362382cd84",
            "b6576b6c-1486-4e40-bf91-c520385e6224",
            "1e1eb9b8-85a4-444b-8d30-8ecc96cf8d85",
            "64d71585-7070-4e1c-99a3-29957a1b8842",
            "4e58fc49-156d-4a79-9b15-94deb4c29344"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5ec1dd14-0019-42e4-83da-9530d3de540f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d2b191a4-4b32-4073-bedd-a7185325e9ef",
              "parentUUID": "5ec1dd14-0019-42e4-83da-9530d3de540f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4377,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "17ef68b6-487e-483c-b913-ead310f2c5db",
              "parentUUID": "5ec1dd14-0019-42e4-83da-9530d3de540f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4333,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35763/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35763/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35763/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35763/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35763/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35763/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "235d273b-3ac6-40fd-99ea-78d945dcaa94",
              "parentUUID": "5ec1dd14-0019-42e4-83da-9530d3de540f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d2b191a4-4b32-4073-bedd-a7185325e9ef",
            "17ef68b6-487e-483c-b913-ead310f2c5db",
            "235d273b-3ac6-40fd-99ea-78d945dcaa94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13043,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e1900c8-2234-4d47-9f6b-71829078dad6",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35763/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35763/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35763/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35763/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35763/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35763/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35763/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fcaa6507-461f-44d0-a3d2-b8f9f070c4a2",
              "parentUUID": "8e1900c8-2234-4d47-9f6b-71829078dad6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 444,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35763/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35763/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35763/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35763/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35763/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35763/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35763/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35763/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35763/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35763/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35763/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35763/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7978cd24-5505-4624-8495-915760e70584",
              "parentUUID": "8e1900c8-2234-4d47-9f6b-71829078dad6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fcaa6507-461f-44d0-a3d2-b8f9f070c4a2",
            "7978cd24-5505-4624-8495-915760e70584"
          ],
          "pending": [],
          "skipped": [],
          "duration": 916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}